{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app-routing.module.ts","./ClientApp/app/app.component.ts","./ClientApp/app/appRoot.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/ganttChart/ganttChart.ts","./ClientApp/app/ganttChart/gantChart.component.html","./ClientApp/app/models/models.ts","./ClientApp/app/processes/processList.component.ts","./ClientApp/app/processes/processList.component.html","./ClientApp/app/shared/dataService.ts","./ClientApp/app/tasks/processCard/process.ts","./ClientApp/app/tasks/processCard/processCard.component.html","./ClientApp/app/tasks/productCard/product.ts","./ClientApp/app/tasks/productCard/productCard.component.html","./ClientApp/app/tasks/task.component.ts","./ClientApp/app/tasks/task.component.html","./ClientApp/app/tasks/typeCard/type.ts","./ClientApp/app/tasks/typeCard/typeCard.component.html","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: \"appRoot.component.html\",\n  styles: [\"../styles.css\"]\n})\nexport class AppComponent {\n  title = 'crm-app';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\r\n\r\n    <div class=\"toolbar\">\r\n        <div class=\"col-md-10 offset-1\">\r\n            <mat-toolbar>\r\n                <span class=\"fill-remaining-space\"></span>\r\n                <span>Top CRM</span>\r\n                <span class=\"fill-remaining-space\"></span>\r\n            </mat-toolbar>\r\n        </div>\r\n    </div>\r\n<div>\r\n    <gantt-chart></gantt-chart>\r\n</div>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProcessList } from './processes/processList.component';\nimport { DataService } from './shared/dataService';\nimport { GantChart } from './ganttChart/ganttChart';\r\nimport { MatDialogModule } from 'node_modules/@angular/material/dialog';\r\nimport { MatToolbarModule } from 'node_modules/@angular/material/toolbar';\r\nimport { MatGridListModule } from 'node_modules/@angular/material/grid-list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from 'node_modules/@angular/material/input';\r\nimport { MatDatepickerModule } from 'node_modules/@angular/material/datepicker';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { TaskCard } from './tasks/task.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ProcessCard } from './tasks/processCard/process';\r\nimport { ProductCard } from './tasks/productCard/product';\r\nimport { TypeCard } from './tasks/typeCard/type';\r\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n        ProcessList,\n        GantChart,\n        TaskCard,\n        ProcessCard,\r\n        ProductCard,\r\n        TypeCard\n  ],\n  imports: [\n    BrowserModule,\n      AppRoutingModule,\n      HttpClientModule,\n      MatDialogModule,\r\n      BrowserAnimationsModule,\n      MatToolbarModule,\n      ReactiveFormsModule,\n      MatGridListModule,\n      MatInputModule,\n      MatSelectModule,\n      MatDatepickerModule,\n      MatNativeDateModule,\n      MatSlideToggleModule,\n      MatButtonModule,\n      MatFormFieldModule\n    ],\r\n    entryComponents: [\r\n        TaskCard,\r\n        ProcessCard,\r\n        ProductCard,\r\n        TypeCard\r\n    ],\n    providers: [\n        DataService,\n        MatDatepickerModule\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Task, Resource, TaskView, ResourceView, User, Process } from \"../models/models\";\r\nimport { TaskCard } from \"../tasks/task.component\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Gantt } from \"node_modules/@syncfusion/ej2-gantt\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: \"gantt-chart\",\r\n    templateUrl: \"gantChart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class GantChart implements OnInit {\r\n    constructor(private dataService: DataService, private dialog: MatDialog) {\r\n        this.tasks = dataService.tasks;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderChart()\r\n    }\r\n\r\n    public gantt: Gantt;\r\n\r\n    public tasks: Task[] = [];\r\n    public users: User[] = [];\r\n    public processes: Process[] = [];\r\n    public lastUpdate:Date = new Date();\r\n    public chartData: TaskView[] = [];\r\n    public selectedUserId: string = \"\";\r\n    public selectedProcessId: number = 0;\r\n\r\n    public renderChart() {\r\n        this.dataService.loadUsers()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.users = this.dataService.users;\r\n                }\r\n            });\r\n        this.dataService.loadProccesses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.processes = this.dataService.processes;\r\n                }\r\n            });\r\n        this.dataService.loadTasks()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.tasks = this.dataService.tasks;\r\n                    this.renderGantt(this.tasks);\r\n                }\r\n            });\r\n    }\r\n\r\n    public renderGantt(tasks: Task[]) {\r\n        let isUserSelect: boolean = this.selectedUserId?.length > 0;\r\n        let isProcessSelect: boolean = this.selectedProcessId > 0;\r\n        let add: boolean = true;\r\n        this.chartData = [];\r\n        let resources: ResourceView[] = [];\r\n        let ids: number = 0;\r\n        tasks.forEach((t) => {\r\n            add = true;\r\n            if ((isUserSelect && t.userId != this.selectedUserId) || (isProcessSelect && t.processId != this.selectedProcessId)) {\r\n                add = false;\r\n            }\r\n            if (add) {\r\n                let id: string = \"\";\r\n                resources.forEach((r) => {\r\n                    if (r.id == t.userId) {\r\n                        id = r.id;\r\n                    }\r\n                });\r\n                let taskView = new TaskView();\r\n\r\n                if (id !== \"\") {\r\n                    taskView.resourceIds = [];\r\n                    taskView.resourceIds.push(id);\r\n                } else {\r\n                    let res = new ResourceView();\r\n                    res.id = t.userId;\r\n                    res.name = this.users.find((u) => u.id == t.userId).userName;\r\n                    resources.push(res);\r\n                    taskView.resourceIds = [];\r\n                    taskView.resourceIds.push(res.id);\r\n                }\r\n\r\n                taskView.id = t.id;\r\n                taskView.name = t.name;\r\n                taskView.parent = t.parentId;\r\n                taskView.product = t.product;\r\n                taskView.resource = t.resource;\r\n                taskView.timeEnd = t.timeEnd;\r\n                taskView.timeStart = t.timeStart;\r\n                taskView.timeReserv = t.timeReserv;\r\n                taskView.type = t.type;\r\n                this.chartData.push(taskView);\r\n            }\r\n        });\r\n\r\n        this.gantt = new Gantt({\r\n            dataSource: this.chartData,\r\n            height: '600px',\r\n            includeWeekend: true,\r\n            taskFields: {\r\n                name: 'name',\r\n                startDate: 'timeStart',\r\n                endDate: 'timeEnd',\r\n                id: 'id',\r\n                dependency: \"parent\",\r\n                resourceInfo: \"resourceIds\"\r\n            },\r\n            resources: resources,\r\n            resourceIDMapping: \"id\",\r\n            resourceNameMapping: \"name\",\r\n            labelSettings: {\r\n                leftLabel: \"resourceIds\",\r\n                rightLabel:\"name\"\r\n            },\r\n            editSettings: {\r\n                allowAdding: true\r\n            },\r\n            allowSelection: true\r\n        });\r\n\r\n        this.gantt.appendTo(\"#piechart\");\r\n    }\r\n\r\n    public onCreate(): void {\r\n        this.dataService.initializeTaskCard();\r\n        const dialogRef = this.dialog.open(TaskCard, {\r\n            disableClose: true,\r\n            autoFocus: true,\r\n            width: \"60%\"\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.reRenderGantt();\r\n        });\r\n    }\r\n\r\n    public reRenderGantt() {\r\n        var time = new Date().getTime() - this.lastUpdate.getTime();\r\n        if (time > 500) {\r\n            this.gantt.destroy();\r\n            this.renderChart();\r\n        }\r\n\r\n        this.lastUpdate = new Date();\r\n    }\r\n\r\n}","<div>\r\n    <div class=\"col-md-10 offset-1\">\r\n        <div class=\"row\">\r\n            <div>\r\n                <button mat-raised-button (click)=\"onCreate()\" class=\"btn btn-info\">\r\n                    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Task\r\n                </button>\r\n            </div>\r\n            <mat-form-field class=\"margin-left-field\">\r\n                <mat-label>Select User</mat-label>\r\n                <mat-select [(value)]=\"this.selectedUserId\" (selectionChange)=\"reRenderGantt()\">\r\n                    <mat-option>None</mat-option>\r\n                    <ng-container *ngFor=\"let user of this.users\">\r\n                        <mat-option value=\"{{user.id}}\">{{user.userName}}</mat-option>\r\n                    </ng-container>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"margin-left-field\">\r\n                <mat-label>Select Process</mat-label>\r\n                <mat-select [(value)]=\"this.selectedProcessId\" (selectionChange)=\"reRenderGantt()\">\r\n                    <mat-option>None</mat-option>\r\n                    <ng-container *ngFor=\"let process of this.processes\">\r\n                        <mat-option value=\"{{process.id}}\">{{process.name}}</mat-option>\r\n                    </ng-container>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div id=\"piechart\"></div>\r\n    </div>\r\n</div>","export class Process {\r\n    id: number;\r\n    timeStart: Date;\r\n    timeEnd: Date;\r\n    name: string;\r\n    tasks: Task[];\r\n}\r\n\r\nexport class User {\r\n    firstName: string;\r\n    lastName?: any;\r\n    tasks: Task[];\r\n    id: string;\r\n    userName: string;\r\n    normalizedUserName: string;\r\n    email: string;\r\n    normalizedEmail: string;\r\n    emailConfirmed: boolean;\r\n    passwordHash: string;\r\n    securityStamp: string;\r\n    concurrencyStamp: string;\r\n    phoneNumber?: string;\r\n    phoneNumberConfirmed: boolean;\r\n    twoFactorEnabled: boolean;\r\n    lockoutEnd?: any;\r\n    lockoutEnabled: boolean;\r\n    accessFailedCount: number;\r\n}\r\n\r\nexport class Task {\r\n    id: number;\r\n    timeStart: Date;\r\n    timeEnd: Date;\r\n    criticalDate: Date;\r\n    name: string;\r\n    product: Product;\r\n    process: Process;\r\n    parentId?: number;\r\n    processId?: number;\r\n    resourceId?: number;\r\n    productId?: number;\r\n    taskTypeId?: number;\r\n    userId: string;\r\n    resource: Product;\r\n    type: Type;\r\n    timeReserv: Date;\r\n    priority: number;\r\n    isImportant: boolean;\r\n    isChangeTime: boolean;\r\n    isChangeUsers: boolean;\r\n    isStarted: boolean;\r\n    isStopped: boolean;\r\n    children?: Task[];\r\n    parent?: Task;\r\n    user: User;\r\n}\r\n\r\nexport class Type {\r\n    id: number;\r\n    name: string;\r\n    tasks: Task[];\r\n}\r\n\r\nexport class Product {\r\n    id: number;\r\n    name: string;\r\n    resourceTasks: Task[];\r\n    productTasks: Task[];\r\n}\r\n\r\nexport class Resource {\r\n    id: number;\r\n    name: string;\r\n    resourceTasks: Task[];\r\n    productTasks: Task[];\r\n}\r\n\r\nexport class TaskView {\r\n    id: number;\r\n    name: string;\r\n    timeStart: Date;\r\n    timeEnd: Date;\r\n    product: Product;\r\n    resource: Resource;\r\n    type: Type;\r\n    timeReserv: Date;\r\n    parent?: number;\r\n    resourceIds: string[];\r\n}\r\n\r\nexport class ResourceView {\r\n    id: string;\r\n    name: string;\r\n}","import { Component, OnInit } from \"@angular/core\"\r\nimport { DataService } from '../shared/dataService';\r\nimport { Process } from '../models/models'\r\n\r\n@Component({\r\n    selector: \"process-list\",\r\n    templateUrl: \"processList.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class ProcessList implements OnInit {\r\n    constructor(private data: DataService) {\r\n        this.processes = data.processes;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProccesses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.processes = this.data.processes;\r\n                }\r\n            });\r\n    }\r\n\r\n    public processes: Process[] = [];\r\n}","<div class=\"row\">\r\n    <ul>\r\n        <li *ngFor=\"let p of processes\">\r\n            {{p.name}}\r\n        </li>\r\n    </ul>\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Task, Process, Product, Resource, Type, User } from \"../models/models\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\"\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\"\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private rootUrl = \"http://localhost:64971/api/\";\r\n\r\n    loadProccesses(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"processes\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.processes = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    loadTasks(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"tasks\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.tasks = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    addTask(task: Task) {\r\n        this.http.post(this.rootUrl + 'tasks/', task)\r\n            .toPromise()\r\n            .then(res => this.loadTasks())\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    addProcess(process: Process) {\r\n        this.http.post(this.rootUrl + 'processes/', process)\r\n            .toPromise()\r\n            .then(res => this.loadProccesses())\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    addTaskFromTaskCard() {\r\n        let task: Task = new Task();\r\n        task.isChangeTime = this.taskCard.value[\"isChangeTime\"];\r\n        task.isChangeUsers = this.taskCard.value[\"isChangeUsers\"];\r\n        task.isImportant = this.taskCard.value[\"isImportant\"];\r\n        task.isStarted = this.taskCard.value[\"isStarted\"];\r\n        task.isStopped = this.taskCard.value[\"isStopped\"];\r\n        task.name = this.taskCard.value[\"name\"];\r\n        task.priority = this.taskCard.value[\"priority\"];\r\n        task.timeEnd = this.taskCard.value[\"timeEnd\"];\r\n        task.timeReserv = this.taskCard.value[\"timeReserv\"];\r\n        task.timeStart = this.taskCard.value[\"timeStart\"];\r\n        task.parentId = this.taskCard.value[\"parent\"];\r\n        task.productId = this.taskCard.value[\"product\"];\r\n        task.resourceId = this.taskCard.value[\"resource\"];\r\n        task.userId = this.taskCard.value[\"user\"];\r\n        task.taskTypeId = this.taskCard.value[\"type\"];\r\n        task.processId = this.taskCard.value[\"process\"];\r\n\r\n        this.addTask(task);\r\n    }\r\n\r\n    addProcessFromProcessCard() {\r\n        let process: Process = new Process();\r\n        process.name = this.processCard.value[\"name\"];\r\n        process.timeStart = this.processCard.value[\"timeStart\"];\r\n        process.timeEnd = this.processCard.value[\"timeEnd\"];\r\n\r\n        this.addProcess(process);\r\n    }\r\n\r\n    loadResources(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"resources\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.resources = data;\r\n                    this.products = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    loadTypes(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"types\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.types = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    loadUsers(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"users\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.users = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    public initializeProcessCard() {\r\n        this.processCard.setValue({\r\n            id: null,\r\n            name: \"\",\r\n            timeStart: new Date(),\r\n            timeEnd: new Date()\r\n        });\r\n    }\r\n\r\n    public initializeTaskCard() {\r\n        this.taskCard.setValue({\r\n            id: null,\r\n            name: \"\",\r\n            timeStart: new Date(),\r\n            timeEnd: new Date(),\r\n            product: '',\r\n            resource: '',\r\n            user: '',\r\n            type: '',\r\n            timeReserv: new Date(),\r\n            priority: 1,\r\n            isImportant: false,\r\n            isChangeTime: false,\r\n            isChangeUsers: false,\r\n            isStarted: false,\r\n            isStopped: false,\r\n            parent: '',\r\n            process: '',\r\n        });\r\n    }\r\n\r\n    public taskCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required),\r\n        timeStart: new FormControl(new Date(), Validators.required),\r\n        timeEnd: new FormControl(new Date(), Validators.required),\r\n        product: new FormControl(''),\r\n        resource: new FormControl(''),\r\n        user: new FormControl('', Validators.required),\r\n        type: new FormControl(''),\r\n        timeReserv: new FormControl(new Date(), Validators.required),\r\n        priority: new FormControl(3),\r\n        isImportant: new FormControl(false),\r\n        isChangeTime: new FormControl(false),\r\n        isChangeUsers: new FormControl(false),\r\n        isStarted: new FormControl(false),\r\n        isStopped: new FormControl(false),\r\n        parent: new FormControl(new Task()),\r\n        process: new FormControl(new Process(), Validators.required)\r\n    });\r\n\r\n    public processCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required),\r\n        timeStart: new FormControl(new Date(), Validators.required),\r\n        timeEnd: new FormControl(new Date(), Validators.required)\r\n    });\r\n\r\n    public typeCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required)\r\n    });\r\n\r\n    public productCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required)\r\n    });\r\n\r\n    public resourceCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required)\r\n    });\r\n\r\n    public processes: Process[] = []; \r\n    public resources: Resource[] = []; \r\n    public products: Product[] = []; \r\n    public types: Type[] = []; \r\n    public users: User[] = []; \r\n    public tasks: Task[] = []; \r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../../shared/dataService\";\r\nimport { Process, Resource, Product, Type, User, Task } from '../../models/models';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: \"process-card\",\r\n    templateUrl: \"processCard.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class ProcessCard {\r\n    constructor(public service: DataService, private dialogRef: MatDialogRef<ProcessCard>) {\r\n\r\n    }\r\n\r\n    public onClear() {\r\n        this.service.processCard.reset();\r\n        this.service.initializeProcessCard();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public onSubmit() {\r\n        if (this.service.processCard.valid) {\r\n            this.service.addProcessFromProcessCard();\r\n        }\r\n\r\n        this.onClear();\r\n    }\r\n}","<mat-toolbar>\r\n    <span>New Process</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button (click)=\"onClear()\"><i class=\"fa fa-times\"></i></button>\r\n</mat-toolbar>\r\n<form [formGroup]=\"service.processCard\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n    <mat-grid-list cols=\"1\" rowHeight=\"600px\">\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <input type=\"hidden\" formControlName=\"id\" />\r\n                <mat-form-field>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Name\" />\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Choose a start date</mat-label>\r\n                    <input formControlName=\"timeStart\" matInput [matDatepicker]=\"startDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #startDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Choose an end date</mat-label>\r\n                    <input formControlName=\"timeEnd\" matInput [matDatepicker]=\"endDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #endDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"button-row float-right\">\r\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"service.processCard.invalid\" (click)=\"onSubmit()\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</form>","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../../shared/dataService\";\r\nimport { Process, Resource, Product, Type, User, Task } from '../../models/models';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: \"product-card\",\r\n    templateUrl: \"productCard.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class ProductCard {\r\n    constructor(public service: DataService, private dialogRef: MatDialogRef<ProductCard>) {\r\n\r\n    }\r\n\r\n    public onClear() {\r\n        this.service.productCard.reset();\r\n        this.service.initializeProductCard();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public onSubmit() {\r\n        if (this.service.productCard.valid) {\r\n            this.service.addProductFromProductCard();\r\n        }\r\n\r\n        this.onClear();\r\n    }\r\n}","<mat-toolbar>\r\n    <span>New Product</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button (click)=\"onClear()\"><i class=\"fa fa-times\"></i></button>\r\n</mat-toolbar>\r\n<form [formGroup]=\"service.productCard\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n    <mat-grid-list cols=\"1\" rowHeight=\"600px\">\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <input type=\"hidden\" formControlName=\"id\" />\r\n                <mat-form-field>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Name\" />\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"button-row float-right\">\r\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"service.productCard.invalid\" (click)=\"onSubmit()\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</form>","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Process, Resource, Product, Type, User, Task } from '../models/models';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { ProcessCard } from './processCard/process';\r\nimport { TypeCard } from './typeCard/type';\r\nimport { ProductCard } from './productCard/product';\r\n\r\n@Component({\r\n    selector: \"task\",\r\n    templateUrl: \"task.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class TaskCard{\r\n    constructor(public service: DataService, private dialogRef: MatDialogRef<TaskCard>, private dialog: MatDialog) {\r\n        this.service.loadTasks()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.tasks = this.service.tasks;\r\n                }\r\n            });\r\n        this.service.loadProccesses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.processes = this.service.processes;\r\n                }\r\n            });\r\n        this.service.loadResources()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.resources = this.service.resources;\r\n                    this.products = this.service.products;\r\n                }\r\n            });\r\n        this.service.loadTypes()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.types = this.service.types;\r\n                }\r\n            });\r\n        this.service.loadUsers()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.users = this.service.users;\r\n                }\r\n            });\r\n    }\r\n\r\n    public processes: Process[] = [];\r\n    public resources: Resource[] = [];\r\n    public products: Product[] = [];\r\n    public types: Type[] = [];\r\n    public users: User[] = [];\r\n    public tasks: Task[] = []; \r\n\r\n    public onClear() {\r\n        this.service.taskCard.reset();\r\n        this.service.initializeTaskCard();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public onSubmit() {\r\n        if (this.service.taskCard.valid) {\r\n            this.service.addTaskFromTaskCard();\r\n        }\r\n\r\n        this.onClear();\r\n    }\r\n\r\n\r\n\r\n    public createProcess(): void {\r\n        this.service.initializeTaskCard();\r\n        const dialogRef = this.dialog.open(ProcessCard, {\r\n            disableClose: true,\r\n            autoFocus: true,\r\n            width: \"60%\"\r\n        });\r\n    }\r\n\r\n    public createType(): void {\r\n        this.service.initializeTypeCard();\r\n        const dialogRef = this.dialog.open(TypeCard, {\r\n            disableClose: true,\r\n            autoFocus: true,\r\n            width: \"60%\"\r\n        });\r\n    }\r\n\r\n    public createProduct(): void {\r\n        this.service.initializeProductCard();\r\n        const dialogRef = this.dialog.open(ProductCard, {\r\n            disableClose: true,\r\n            autoFocus: true,\r\n            width: \"60%\"\r\n        });\r\n    }\r\n}","<mat-toolbar>\r\n    <span>New Task</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button (click)=\"onClear()\"><i class=\"fa fa-times\"></i></button>\r\n</mat-toolbar>\r\n<form [formGroup]=\"service.taskCard\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n    <mat-grid-list cols=\"2\" rowHeight=\"600px\">\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <input type=\"hidden\" formControlName=\"id\" />\r\n                <mat-form-field>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Name\" />\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-10\">\r\n                        <mat-form-field>\r\n                            <mat-select formControlName=\"process\" placeholder=\"Process\" class=\"process\">\r\n                                <mat-option>None</mat-option>\r\n                                <ng-container *ngFor=\"let process of this.processes\">\r\n                                    <mat-option value=\"{{process.id}}\">{{process.name}}</mat-option>\r\n                                </ng-container>\r\n                            </mat-select>\r\n                            <mat-error>This field is mandatory.</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <button class=\"btn btn-primary\" (click)=\"createProcess()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <mat-form-field>\r\n                    <mat-select formControlName=\"parent\" placeholder=\"Parent task\">\r\n                        <mat-option>None</mat-option>\r\n                        <ng-container *ngFor=\"let task of this.tasks\">\r\n                            <mat-option value=\"{{task.id}}\">{{task.name}}</mat-option>\r\n                        </ng-container>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-10\">\r\n                        <mat-form-field>\r\n                            <mat-select formControlName=\"type\" placeholder=\"Task type\">\r\n                                <mat-option>None</mat-option>\r\n                                <ng-container *ngFor=\"let type of this.types\">\r\n                                    <mat-option value=\"{{type.id}}\">{{type.name}}</mat-option>\r\n                                </ng-container>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <button class=\"btn btn-primary\" (click)=\"createType()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <mat-form-field>\r\n                    <mat-select formControlName=\"user\" placeholder=\"User\">\r\n                        <mat-option>None</mat-option>\r\n                        <ng-container *ngFor=\"let user of this.users\">\r\n                            <mat-option value=\"{{user.id}}\">{{user.userName}}</mat-option>\r\n                        </ng-container>\r\n                    </mat-select>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div>\r\n                    <mat-slide-toggle color=\"primary\" formControlName=\"isChangeTime\">Let to change critical date?</mat-slide-toggle>\r\n                </div>\r\n                <div>\r\n                    <mat-slide-toggle color=\"primary\" formControlName=\"isChangeUsers\">Let to change users?</mat-slide-toggle>\r\n                </div>\r\n                <div>\r\n                    <mat-slide-toggle color=\"primary\" formControlName=\"isStarted\">Is task started?</mat-slide-toggle>\r\n                </div>\r\n                <div>\r\n                    <mat-slide-toggle color=\"primary\" formControlName=\"isStopped\">Is task stopped?</mat-slide-toggle>\r\n                </div>\r\n                <div>\r\n                    <mat-slide-toggle color=\"primary\" formControlName=\"isStopped\">Is task ended?</mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n</mat-grid-tile>\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <mat-form-field>\r\n                    <mat-label>Choose a start date</mat-label>\r\n                    <input formControlName=\"timeStart\" matInput [matDatepicker]=\"startDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #startDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Choose an end date</mat-label>\r\n                    <input formControlName=\"timeEnd\" matInput [matDatepicker]=\"endDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #endDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Choose a critical date</mat-label>\r\n                    <input formControlName=\"timeReserv\" matInput [matDatepicker]=\"criticalDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"criticalDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #criticalDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-10\">\r\n                        <mat-form-field>\r\n                            <mat-select formControlName=\"product\" placeholder=\"Product\">\r\n                                <mat-option>None</mat-option>\r\n                                <ng-container *ngFor=\"let product of this.products\">\r\n                                    <mat-option value=\"{{product.id}}\">{{product.name}}</mat-option>\r\n                                </ng-container>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <button class=\"btn btn-primary\" (click)=\"createProduct()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-10\">\r\n                        <mat-form-field>\r\n                            <mat-select formControlName=\"resource\" placeholder=\"Resource\">\r\n                                <mat-option>None</mat-option>\r\n                                <ng-container *ngFor=\"let resource of this.resources\">\r\n                                    <mat-option value=\"{{resource.id}}\">{{resource.name}}</mat-option>\r\n                                </ng-container>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <button class=\"btn btn-primary\" (click)=\"createProduct()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <mat-form-field>\r\n                    <mat-select formControlName=\"priority\" placeholder=\"Priority\">\r\n                        <mat-option value=\"1\">1</mat-option>\r\n                        <mat-option value=\"2\">2</mat-option>\r\n                        <mat-option value=\"3\">3</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <div class=\"button-row float-right\">\r\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"service.taskCard.invalid\" (click)=\"onSubmit()\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</form>","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../../shared/dataService\";\r\nimport { Process, Resource, Product, Type, User, Task } from '../../models/models';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: \"type-card\",\r\n    templateUrl: \"typeCard.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class TypeCard {\r\n    constructor(public service: DataService, private dialogRef: MatDialogRef<TypeCard>) {\r\n\r\n    }\r\n\r\n    public onClear() {\r\n        this.service.typeCard.reset();\r\n        this.service.initializeTypeCard();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public onSubmit() {\r\n        if (this.service.typeCard.valid) {\r\n            this.service.addTypeFromTypeCard();\r\n        }\r\n\r\n        this.onClear();\r\n    }\r\n}","<mat-toolbar>\r\n    <span>New Type</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button (click)=\"onClear()\"><i class=\"fa fa-times\"></i></button>\r\n</mat-toolbar>\r\n<form [formGroup]=\"service.typeCard\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n    <mat-grid-list cols=\"1\" rowHeight=\"600px\">\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <input type=\"hidden\" formControlName=\"id\" />\r\n                <mat-form-field>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Name\" />\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"button-row float-right\">\r\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"service.typeCard.invalid\" (click)=\"onSubmit()\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}