{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app-routing.module.ts","./ClientApp/app/app.component.ts","./ClientApp/app/appRoot.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/auth/auth.guard.ts","./ClientApp/app/auth/auth.interceptor.ts","./ClientApp/app/forbidden/forbidden.component.ts","./ClientApp/app/forbidden/forbidden.component.html","./ClientApp/app/ganttChart/ganttChart.ts","./ClientApp/app/ganttChart/gantChart.component.html","./ClientApp/app/models/models.ts","./ClientApp/app/processes/processList.component.ts","./ClientApp/app/processes/processList.component.html","./ClientApp/app/shared/dataService.ts","./ClientApp/app/shared/user.service.ts","./ClientApp/app/tasks/processCard/process.ts","./ClientApp/app/tasks/processCard/processCard.component.html","./ClientApp/app/tasks/productCard/product.ts","./ClientApp/app/tasks/productCard/productCard.component.html","./ClientApp/app/tasks/task.component.ts","./ClientApp/app/tasks/task.component.html","./ClientApp/app/tasks/typeCard/type.ts","./ClientApp/app/tasks/typeCard/typeCard.component.html","./ClientApp/app/user/login/login.component.ts","./ClientApp/app/user/login/login.component.html","./ClientApp/app/user/registration/registration.component.ts","./ClientApp/app/user/registration/registration.component.html","./ClientApp/app/user/user.component.ts","./ClientApp/app/user/user.component.html","./ClientApp/app/userList/userList.component.ts","./ClientApp/app/userList/userList.component.html","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user/user.component';\r\nimport { RegistrationComponent } from './user/registration/registration.component';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { GantChart } from './ganttChart/ganttChart';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\r\n\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/user/login', pathMatch: 'full' },\n    {\n        path: 'user', component: UserComponent,\n        children: [\n            { path: 'registration', component: RegistrationComponent },\n            { path: 'login', component: LoginComponent }\n        ]\n    },\n    { path: 'info', component: GantChart, canActivate: [AuthGuard], data: { permittedRoles: ['Head','Worker'] } },\r\n    { path: 'forbidden', component: ForbiddenComponent }\n];\n\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: \"appRoot.component.html\",\n  styles: [\"../styles.css\"]\n})\nexport class AppComponent {\n  title = 'crm-app';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\r\n    <div>\r\n        <router-outlet></router-outlet>\r\n    </div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { ReactiveFormsModule, FormsModule  } from \"@angular/forms\";\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ProcessList } from './processes/processList.component';\r\nimport { DataService } from './shared/dataService';\r\nimport { GantChart } from './ganttChart/ganttChart';\r\nimport { MatDialogModule } from 'node_modules/@angular/material/dialog';\r\nimport { MatToolbarModule } from 'node_modules/@angular/material/toolbar';\r\nimport { MatGridListModule } from 'node_modules/@angular/material/grid-list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from 'node_modules/@angular/material/input';\r\nimport { MatDatepickerModule } from 'node_modules/@angular/material/datepicker';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { TaskCard } from './tasks/task.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ProcessCard } from './tasks/processCard/process';\r\nimport { ProductCard } from './tasks/productCard/product';\r\nimport { TypeCard } from './tasks/typeCard/type';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { UserComponent } from './user/user.component';\r\nimport { RegistrationComponent } from './user/registration/registration.component';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { UserService } from './shared/user.service';\r\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\nimport { UserListComponent } from './userList/userList.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n        ProcessList,\r\n        GantChart,\r\n        TaskCard,\r\n        ProcessCard,\r\n        ProductCard,\r\n        TypeCard,\r\n        UserComponent,\r\n        RegistrationComponent,\r\n        LoginComponent,\r\n        ForbiddenComponent,\r\n        UserListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n      AppRoutingModule,\r\n      HttpClientModule,\r\n      MatDialogModule,\r\n      BrowserAnimationsModule,\r\n      MatToolbarModule,\r\n      ReactiveFormsModule,\r\n      MatGridListModule,\r\n      MatInputModule,\r\n      MatSelectModule,\r\n      MatDatepickerModule,\r\n      MatNativeDateModule,\r\n      MatSlideToggleModule,\r\n      MatButtonModule,\r\n      MatFormFieldModule,\r\n      FormsModule,\r\n      ToastrModule.forRoot(),\r\n    ],\r\n    entryComponents: [\r\n        TaskCard,\r\n        ProcessCard,\r\n        ProductCard,\r\n        TypeCard\r\n    ],\r\n    providers: [\r\n        DataService,\r\n        UserService,\r\n        MatDatepickerModule,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi: true\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../shared/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(private router: Router, private service: UserService){}\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('token') != null){\n      let roles = next.data['permittedRoles'] as Array<string>;\n      if(roles){\n        if(this.service.roleMatch(roles)){\n          return true;\n        }\n        else{\n          this.router.navigate(['/forbidden']);\n          return false;\n        }\n      }\n    }\n    else{\n      this.router.navigate(['/user/login']);\n      return false;\n    }\n  }\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n    return true;\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {tap} from 'rxjs/operators'\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n    constructor(private router: Router) {}\r\n\r\n    intercept(req: HttpRequest<any>,next: HttpHandler): Observable<HttpEvent<any>>{\r\n        if (localStorage.getItem('token')!=null){\r\n            const clonedRequest = req.clone({\r\n                headers: req.headers.set('Authorization','Bearer '+ localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedRequest).pipe(\r\n                tap(\r\n                    success=>{},\r\n                    err => {\r\n                        if(err.status == 401){\r\n                            localStorage.removeItem('token');\r\n                            this.router.navigateByUrl('/user/login');\r\n                        }\r\n                        else {\r\n                            localStorage.removeItem('token');\r\n                            this.router.navigateByUrl('/forbidden');\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n        }\r\n        else{\r\n            return next.handle(req.clone());\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styles: []\n})\nexport class ForbiddenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col s6 offset-s3\">\n        <div class=\"card\">\n            <div class=\"card-image\">\n                <img src=\"../../assets/img/403.png\" style=\"height:300px;width:300px;\">\n            </div>\n            <div class=\"card-content\">\n                <span class=\"card-title\" style=\"color: #039be5;\">403 - ACCESS DENIED</span>\n                <p>You don't have permission to access this resource.</p>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Task, Resource, TaskView, ResourceView, User, Process, Product, Type, Status } from \"../models/models\";\r\nimport { TaskCard } from \"../tasks/task.component\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Gantt, Selection, TaskType } from \"node_modules/@syncfusion/ej2-gantt\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UserService } from '../shared/user.service';\r\nimport { UserListComponent } from '../userList/userList.component';\r\nGantt.Inject(Selection);\r\n\r\n@Component({\r\n    selector: \"gantt-chart\",\r\n    templateUrl: \"gantChart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class GantChart implements OnInit {\r\n    constructor(private dataService: DataService, private dialog: MatDialog, public userService: UserService) {\r\n        this.tasks = dataService.tasks;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderChart()\r\n    }\r\n\r\n    public gantt: Gantt;\r\n\r\n    public tasks: Task[] = [];\r\n    public users: User[] = [];\r\n    public processes: Process[] = [];\r\n    public types: Type[] = [];\r\n    public resources: Resource[] = [];\r\n    public products: Product[] = [];\r\n    public lastUpdate:Date = new Date();\r\n    public chartData: TaskView[] = [];\r\n    public statuses: Status[] = [];\r\n    public selectedUserId: string = \"\";\r\n    public selectedProcessId: number = 0;\r\n\r\n    public renderChart() {\r\n        this.dataService.loadProccesses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.processes = this.dataService.processes;\r\n                }\r\n            });\r\n\r\n        this.dataService.loadStatuses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.statuses = this.dataService.statuses;\r\n                }\r\n            });\r\n\r\n        this.dataService.loadUsers()\r\n            .subscribe(suc => {\r\n                if (suc) {\r\n                    this.users = this.dataService.users;\r\n                this.dataService.loadTasks()\r\n                    .subscribe(success => {\r\n                        if (success) {\r\n                            if (this.userService.roleMatch(['Head'])) {\r\n                                this.tasks = this.dataService.tasks;\r\n                            }\r\n                            else {\r\n                                this.tasks = [];\r\n                                this.dataService.tasks.forEach((t) => {\r\n                                    if (t.userId == this.userService.userProfile.id) {\r\n                                        this.tasks.push(t);\r\n                                    }\r\n                                })\r\n                            }\r\n                            this.renderGantt(this.tasks);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n        this.dataService.loadResources()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.dataService.resources;\r\n                    this.resources = this.dataService.resources;\r\n                }\r\n            });\r\n        this.dataService.loadTypes()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.types = this.dataService.types;\r\n                }\r\n            });\r\n    }\r\n\r\n    public renderGantt(tasks: Task[]) {\r\n        let isUserSelect: boolean = this.selectedUserId?.length > 0;\r\n        let isProcessSelect: boolean = this.selectedProcessId > 0;\r\n        let add: boolean = true;\r\n        this.chartData = [];\r\n        let resources: ResourceView[] = [];\r\n        let ids: number = 0;\r\n        tasks.forEach((t) => {\r\n            add = true;\r\n            if ((isUserSelect && t.userId != this.selectedUserId) || (isProcessSelect && t.processId != this.selectedProcessId)) {\r\n                add = false;\r\n            }\r\n            if (add) {\r\n                let id: string = \"\";\r\n                resources.forEach((r) => {\r\n                    if (r.id == t.userId) {\r\n                        id = r.id;\r\n                    }\r\n                });\r\n                let taskView = new TaskView();\r\n\r\n                if (id !== \"\") {\r\n                    taskView.resourceIds = [];\r\n                    taskView.resourceIds.push(id);\r\n                } else {\r\n                    let user = this.users.find((u) => u.id == t.userId);\r\n                    if (user) {\r\n                        let res = new ResourceView();\r\n                        res.id = t.userId;\r\n                        res.name = user.userName;\r\n                        resources.push(res);\r\n                        taskView.resourceIds = [];\r\n                        taskView.resourceIds.push(res.id);\r\n                    }\r\n                }\r\n\r\n                taskView.id = t.id;\r\n                taskView.name = t.name;\r\n                taskView.parent = t.parentId;\r\n                taskView.product = t.product;\r\n                taskView.resource = t.resource;\r\n                taskView.timeEnd = t.timeEnd;\r\n                taskView.timeStart = t.timeStart;\r\n                taskView.timeReserv = t.timeReserv;\r\n                taskView.type = t.type;\r\n                this.chartData.push(taskView);\r\n            }\r\n        });\r\n\r\n        this.gantt = new Gantt({\r\n            dataSource: this.chartData,\r\n            height: '600px',\r\n            includeWeekend: true,\r\n            taskFields: {\r\n                name: 'name',\r\n                startDate: 'timeStart',\r\n                endDate: 'timeEnd',\r\n                id: 'id',\r\n                dependency: \"parent\",\r\n                resourceInfo: \"resourceIds\"\r\n            },\r\n            resources: resources,\r\n            resourceIDMapping: \"id\",\r\n            resourceNameMapping: \"name\",\r\n            labelSettings: {\r\n                leftLabel: \"resourceIds\",\r\n                rightLabel:\"name\"\r\n            },\r\n            editSettings: {\r\n                allowAdding: true\r\n            },\r\n            allowSelection: true\r\n        });\r\n\r\n        this.gantt.appendTo(\"#piechart\");\r\n    }\r\n\r\n    public onCreate(): void {\r\n        this.dataService.initializeTaskCard();\r\n        const dialogRef = this.dialog.open(TaskCard, {\r\n            disableClose: true,\r\n            autoFocus: true,\r\n            width: \"60%\"\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.reRenderGantt();\r\n        });\r\n    }\r\n\r\n    public reRenderGantt() {\r\n        var time = new Date().getTime() - this.lastUpdate.getTime();\r\n        if (time > 500) {\r\n            this.gantt.destroy();\r\n            this.renderChart();\r\n        }\r\n\r\n        this.lastUpdate = new Date();\r\n    }\r\n\r\n    public eventList() {\r\n        this.gantt.rowSelecting();\r\n    }\r\n\r\n    public onDelete() {\r\n        this.dataService.deleteTask(this.chartData[this.gantt.selectedRowIndex].id);\r\n        this.reRenderGantt();\r\n    }\r\n\r\n    public onUpdate() {\r\n        if (this.gantt?.selectedRowIndex > -1) {\r\n            this.dataService.add = false;\r\n            this.dataService.initTaskCardById(this.chartData[this.gantt.selectedRowIndex].id);\r\n            const dialogRef = this.dialog.open(TaskCard, {\r\n                disableClose: true,\r\n                autoFocus: true,\r\n                width: \"60%\"\r\n            });\r\n\r\n            dialogRef.afterClosed().subscribe(result => {\r\n                this.reRenderGantt();\r\n                this.dataService.add = true;\r\n            });\r\n            this.gantt.clearSelection();\r\n        }\r\n    }\r\n\r\n    public openUsers() {\r\n        const dialogRef = this.dialog.open(UserListComponent, {\r\n            disableClose: true,\r\n            autoFocus: true,\r\n            width: \"60%\"\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.reRenderGantt();\r\n        });\r\n    }\r\n\r\n    public onLogout() {\r\n        this.userService.onLogout();\r\n    }\r\n}","<div class=\"toolbar\">\r\n    <div class=\"col-md-10 offset-1\">\r\n        <mat-toolbar>\r\n            <span class=\"col-md-6\"></span>\r\n            <span class=\"col-md-2\">Top CRM</span>\r\n            <div class=\"col-md-3\"></div>\r\n            <div class=\"col-md-1 float-right\">\r\n                <button class=\"btn btn-light\" (click)=\"onLogout()\">Logout <i class=\"fas fa-sign-out-alt\"></i></button>\r\n            </div>\r\n        </mat-toolbar>\r\n    </div>\r\n</div>\r\n<div>\r\n    <div class=\"col-md-10 offset-1\">\r\n        <div class=\"card\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-9\">\r\n                    <button mat-raised-button (click)=\"onCreate()\" class=\"btn btn-info padBtn\">\r\n                        <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Task\r\n                    </button>\r\n                    <button *ngIf=\"this.userService.roleMatch(['Head'])\" class=\"btn btn-secondary padBtn\" mat-raised-button (click)=\"openUsers()\"><i class=\"fas fa-users\"></i> Users</button>\r\n                    <mat-form-field *ngIf=\"this.userService.roleMatch(['Head'])\" class=\"margin-left-field\">\r\n                        <mat-label>Select User</mat-label>\r\n                        <mat-select [(value)]=\"this.selectedUserId\" (selectionChange)=\"reRenderGantt()\">\r\n                            <mat-option>None</mat-option>\r\n                            <ng-container *ngFor=\"let user of this.users\">\r\n                                <mat-option value=\"{{user.id}}\">{{user.userName}}</mat-option>\r\n                            </ng-container>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field *ngIf=\"this.userService.roleMatch(['Head'])\" class=\"margin-left-field\">\r\n                        <mat-label>Select Process</mat-label>\r\n                        <mat-select [(value)]=\"this.selectedProcessId\" (selectionChange)=\"reRenderGantt()\">\r\n                            <mat-option>None</mat-option>\r\n                            <ng-container *ngFor=\"let process of this.processes\">\r\n                                <mat-option value=\"{{process.id}}\">{{process.name}}</mat-option>\r\n                            </ng-container>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"button-row col-md-3 update-btns\">\r\n                    <button *ngIf=\"this.gantt?.selectedRowIndex > -1\" mat-raised-button color=\"primary\" type=\"submit\" (click)=\"onUpdate()\" class=\"padBtn\">Update</button>\r\n                    <button *ngIf=\"this.gantt?.selectedRowIndex > -1 && this.userService.roleMatch(['Head'])\" mat-raised-button color=\"warn\" (click)=\"onDelete()\" class=\"padBtn\">Delete <i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"piechart\"></div>\r\n    </div>\r\n</div>","export class Process {\r\n    id: number;\r\n    timeStart: Date;\r\n    timeEnd: Date;\r\n    name: string;\r\n    tasks: Task[];\r\n}\r\n\r\nexport class User {\r\n    numberOfTasksByType: number;\r\n    firstName: string;\r\n    lastName?: any;\r\n    tasks: Task[];\r\n    id: string;\r\n    userName: string;\r\n    normalizedUserName: string;\r\n    email: string;\r\n    normalizedEmail: string;\r\n    emailConfirmed: boolean;\r\n    passwordHash: string;\r\n    securityStamp: string;\r\n    concurrencyStamp: string;\r\n    phoneNumber?: string;\r\n    phoneNumberConfirmed: boolean;\r\n    twoFactorEnabled: boolean;\r\n    lockoutEnd?: any;\r\n    lockoutEnabled: boolean;\r\n    accessFailedCount: number;\r\n    role: string;\r\n}\r\n\r\nexport class Task {\r\n    id: number;\r\n    timeStart: Date;\r\n    timeEnd: Date;\r\n    criticalDate: Date;\r\n    name: string;\r\n    product: Product;\r\n    process: Process;\r\n    parentId?: number;\r\n    processId?: number;\r\n    resourceId?: number;\r\n    productId?: number;\r\n    taskTypeId?: number;\r\n    userId: string;\r\n    resource: Product;\r\n    type: Type;\r\n    timeReserv: Date;\r\n    priority: number;\r\n    isChangeTime: boolean;\r\n    isChangeUsers: boolean;\r\n    children?: Task[];\r\n    parent?: Task;\r\n    user: User;\r\n    statusId: number;\r\n    userQueuParentId: number;\r\n    processQueuParentId: number;\r\n}\r\n\r\nexport class Type {\r\n    id: number;\r\n    name: string;\r\n    tasks: Task[];\r\n}\r\n\r\nexport class Product {\r\n    id: number;\r\n    name: string;\r\n    resourceTasks: Task[];\r\n    productTasks: Task[];\r\n}\r\n\r\nexport class Resource {\r\n    id: number;\r\n    name: string;\r\n    resourceTasks: Task[];\r\n    productTasks: Task[];\r\n}\r\n\r\nexport class TaskView {\r\n    id: number;\r\n    name: string;\r\n    timeStart: Date;\r\n    timeEnd: Date;\r\n    product: Product;\r\n    resource: Resource;\r\n    type: Type;\r\n    timeReserv: Date;\r\n    parent?: number;\r\n    resourceIds: string[];\r\n}\r\n\r\nexport class ResourceView {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\nexport class UserRole {\r\n    userId: string;\r\n    roleId: string;\r\n}\r\n\r\nexport class Role {\r\n    id: string;\r\n    name: string;\r\n    normalizedName: string;\r\n    concurrencyStamp: string;\r\n}\r\n\r\nexport class UserByType {\r\n    key: string;\r\n    value: number;\r\n}\r\n\r\nexport class UserProfile {\r\n    id: string;\r\n    userName: string;\r\n    email: string;\r\n}\r\n\r\nexport class Status {\r\n    id: number;\r\n    name: string;\r\n}","import { Component, OnInit } from \"@angular/core\"\r\nimport { DataService } from '../shared/dataService';\r\nimport { Process } from '../models/models'\r\n\r\n@Component({\r\n    selector: \"process-list\",\r\n    templateUrl: \"processList.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class ProcessList implements OnInit {\r\n    constructor(private data: DataService) {\r\n        this.processes = data.processes;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProccesses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.processes = this.data.processes;\r\n                }\r\n            });\r\n    }\r\n\r\n    public processes: Process[] = [];\r\n}","<div class=\"row\">\r\n    <ul>\r\n        <li *ngFor=\"let p of processes\">\r\n            {{p.name}}\r\n        </li>\r\n    </ul>\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Task, Process, Product, Resource, Type, User, UserByType, Status } from \"../models/models\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\"\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\"\r\nimport { TaskType } from '@syncfusion/ej2-gantt';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private rootUrl = \"http://localhost:64971/api/\";\r\n\r\n    loadProccesses(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"processes\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.processes = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    loadTasks(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"tasks\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.tasks = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    addTask(task: Task) {\r\n        this.http.post(this.rootUrl + 'tasks/add/', task)\r\n            .toPromise()\r\n            .then(res => this.loadTasks())\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    updateTask(task: Task) {\r\n        this.http.post(this.rootUrl + 'tasks/update/', task)\r\n            .toPromise()\r\n            .then(res => this.loadTasks())\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    updateUser(user: User) {\r\n        var res = new Date().getTime() - this.lastUserUpdate.getTime();\r\n        if (res > 500) {\r\n            this.lastUserUpdate = new Date();\r\n            this.http.post(this.rootUrl + 'users/update/', user)\r\n                .toPromise()\r\n                .then(res => this.loadUsers())\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }\r\n\r\n    deleteUser(id: string) {\r\n        this.http.delete(this.rootUrl + 'users/' + id)\r\n            .toPromise()\r\n            .then(res => this.loadUsers())\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    getSortUsersByTypeId(id: number) {\r\n        return this.http.get(this.rootUrl + \"users/bytype?id=\" + id)\r\n            .toPromise()\r\n            .then((res: UserByType[]) => {\r\n                this.usersByType = res;\r\n                this.users.forEach((u) => {\r\n                    this.usersByType.forEach((ut) => {\r\n                        if (ut.key == u.id) {\r\n                            u.numberOfTasksByType = ut.value;\r\n                        }\r\n                    })\r\n                })\r\n                this.users = this.users.sort((u1, u2) => u1.numberOfTasksByType > u2.numberOfTasksByType ? -1 : 1);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    deleteTask(task: any) {\r\n        this.http.delete(this.rootUrl + 'tasks/' + task)\r\n            .toPromise()\r\n            .then(res => this.loadTasks())\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    addProcess(process: Process) {\r\n        this.http.post(this.rootUrl + 'processes/', process)\r\n            .toPromise()\r\n            .then(res => this.loadProccesses())\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    addType(type: Type) {\r\n        this.http.post(this.rootUrl + 'types/', type)\r\n            .toPromise()\r\n            .then(res => this.loadTypes())\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.http.post(this.rootUrl + 'resources/', product)\r\n            .toPromise()\r\n            .then(res => this.loadResources())\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    addTaskFromTaskCard(id:string=\"\") {\r\n        let task: Task = new Task();\r\n        task.isChangeTime = this.taskCard.value[\"isChangeTime\"];\r\n        task.isChangeUsers = this.taskCard.value[\"isChangeUsers\"];\r\n        task.name = this.taskCard.value[\"name\"];\r\n        task.priority = this.taskCard.value[\"priority\"];\r\n        task.timeEnd = this.taskCard.value[\"timeEnd\"];\r\n        task.timeReserv = this.taskCard.value[\"timeReserv\"];\r\n        task.timeStart = this.taskCard.value[\"timeStart\"];\r\n        task.parentId = this.taskCard.value[\"parent\"];\r\n        task.productId = this.taskCard.value[\"product\"];\r\n        task.resourceId = this.taskCard.value[\"resource\"];\r\n        task.userId = id? id : this.taskCard.value[\"user\"];\r\n        task.taskTypeId = this.taskCard.value[\"type\"];\r\n        task.processId = this.taskCard.value[\"process\"];\r\n\r\n        this.addTask(task);\r\n    }\r\n\r\n    updateTaskFromTaskCard() {\r\n        let task = this.tasks.find((t) => t.id == this.taskCard.value[\"id\"]);\r\n        task.name = this.taskCard.value[\"name\"];\r\n        task.timeEnd = this.taskCard.value[\"timeEnd\"];\r\n        task.timeReserv = this.taskCard.value[\"timeReserv\"];\r\n        task.timeStart = this.taskCard.value[\"timeStart\"];\r\n        task.statusId = this.taskCard.value[\"status\"];\r\n\r\n        this.updateTask(task);\r\n    }\r\n\r\n    updateUserFromCard() {\r\n        let user = this.users.find((t) => t.id == this.userCard.value[\"id\"]);\r\n        user.email = this.userCard.value[\"email\"];\r\n        user.userName = this.userCard.value[\"name\"];\r\n        user.role = this.userCard.value[\"role\"];\r\n\r\n        this.updateUser(user);\r\n    }\r\n\r\n    initTaskCardById(id: any) {\r\n        let t:Task = this.tasks.find((t) => t.id == id);\r\n        this.taskCard.setValue({\r\n            id: t.id,\r\n            name: t.name,\r\n            status: t.statusId ? this.statuses.find((p) => p.id == t.statusId).name : \"\",\r\n            timeStart: t.timeStart,\r\n            timeEnd: t.timeEnd,\r\n            product: t.productId ? this.products.find((p) => p.id == t.productId).name : \"\",\r\n            resource: t.resourceId ? this.resources.find((p) => p.id == t.resourceId).name : \"\",\r\n            user: t.userId ? this.users.find((p) => p.id == t.userId).userName : \"\",\r\n            type: t.taskTypeId ? this.types.find((p) => p.id == t.taskTypeId).name : \"\",\r\n            timeReserv: t.timeReserv,\r\n            priority: t.priority,\r\n            isChangeTime: t.isChangeTime,\r\n            isChangeUsers: t.isChangeUsers,\r\n            parent: t.parentId ? this.tasks.find((p) => p.id == t.parentId).name : \"\",\r\n            process: t.processId ? this.processes.find((p) => p.id == t.processId).name : \"\",\r\n        });\r\n    }\r\n\r\n    addProcessFromProcessCard() {\r\n        let process: Process = new Process();\r\n        process.name = this.processCard.value[\"name\"];\r\n        process.timeStart = this.processCard.value[\"timeStart\"];\r\n        process.timeEnd = this.processCard.value[\"timeEnd\"];\r\n\r\n        this.addProcess(process);\r\n    }\r\n\r\n    addTypeFromTypeCard() {\r\n        let type: Type = new Type();\r\n        type.name = this.typeCard.value[\"name\"];\r\n\r\n        this.addType(type);\r\n    }\r\n\r\n    addProductFromProductCard() {\r\n        let product: Product = new Product();\r\n        product.name = this.productCard.value[\"name\"];\r\n\r\n        this.addProduct(product);\r\n    }\r\n\r\n    loadResources(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"resources\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.resources = data;\r\n                    this.products = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    loadTypes(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"types\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.types = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    loadStatuses(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"statuses\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.statuses = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    loadUsers(): Observable<boolean> {\r\n        return this.http.get(this.rootUrl + \"users\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.users = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    public initializeProcessCard() {\r\n        this.processCard.setValue({\r\n            id: null,\r\n            name: \"\",\r\n            timeStart: new Date(),\r\n            timeEnd: new Date()\r\n        });\r\n    }\r\n\r\n    public populateUserCard(user: User) {\r\n        this.userCard.setValue({\r\n            id: user.id,\r\n            name: user.userName,\r\n            email: user.email,\r\n            role: user.role\r\n        })\r\n    }\r\n\r\n    public initializeTypeCard() {\r\n        this.typeCard.setValue({\r\n            id: null,\r\n            name: \"\"\r\n        });\r\n    }\r\n\r\n    public initializeProductCard() {\r\n        this.productCard.setValue({\r\n            id: null,\r\n            name: \"\"\r\n        });\r\n    }\r\n\r\n    public initializeTaskCard() {\r\n        this.taskCard.setValue({\r\n            id: null,\r\n            name: \"\",\r\n            timeStart: new Date(),\r\n            timeEnd: new Date(),\r\n            status:'',\r\n            product: '',\r\n            resource: '',\r\n            user: '',\r\n            type: '',\r\n            timeReserv: new Date(),\r\n            priority: 1,\r\n            isChangeTime: false,\r\n            isChangeUsers: false,\r\n            parent: '',\r\n            process: '',\r\n        });\r\n    }\r\n\r\n    public taskCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required),\r\n        timeStart: new FormControl(new Date(), Validators.required),\r\n        timeEnd: new FormControl(new Date(), Validators.required),\r\n        product: new FormControl(''),\r\n        resource: new FormControl(''),\r\n        user: new FormControl(''),\r\n        type: new FormControl(''),\r\n        timeReserv: new FormControl(new Date(), Validators.required),\r\n        priority: new FormControl(3),\r\n        isChangeTime: new FormControl(false),\r\n        isChangeUsers: new FormControl(false),\r\n        status: new FormControl(''),\r\n        parent: new FormControl(new Task()),\r\n        process: new FormControl(new Process(), Validators.required)\r\n    });\r\n\r\n    public processCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required),\r\n        timeStart: new FormControl(new Date(), Validators.required),\r\n        timeEnd: new FormControl(new Date(), Validators.required)\r\n    });\r\n\r\n    public userCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required),\r\n        email: new FormControl('', [Validators.required, Validators.email]),\r\n        role: new FormControl('', Validators.required)\r\n    });\r\n\r\n    public typeCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required)\r\n    });\r\n\r\n    public productCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required)\r\n    });\r\n\r\n    public resourceCard: FormGroup = new FormGroup({\r\n        id: new FormControl(0),\r\n        name: new FormControl('', Validators.required)\r\n    });\r\n\r\n    public processes: Process[] = []; \r\n    public resources: Resource[] = []; \r\n    public products: Product[] = [];\r\n    public types: Type[] = []; \r\n    public users: User[] = []; \r\n    public statuses: Status[] = []; \r\n    public tasks: Task[] = []; \r\n    public add: boolean = true;\r\n    public lastUserUpdate: Date = new Date();\r\n    public usersByType: UserByType[] = [];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\"\r\nimport { Router } from '@angular/router';\r\nimport { Role, UserRole, User, UserProfile } from '../models/models';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    readonly rootURL = 'http://localhost:64971/api/';\r\n\r\n    constructor(private fb: FormBuilder, private http: HttpClient, private router: Router) { }\r\n\r\n  formModel = this.fb.group({\r\n    UserName:['', Validators.required],\r\n    Email:['', Validators.email],\r\n    FullName:[''],\r\n    Passwords: this.fb.group({\r\n      Password:['', [Validators.required, Validators.minLength(4)]],\r\n      ConfirmPassword:['', [Validators.required, Validators.minLength(4)]]\r\n    },{validator : this.comparePasswords})\r\n  });\r\n\r\n  comparePasswords(fb: FormGroup){\r\n    let confirmPasswordCtrl = fb.get('ConfirmPassword');\r\n    if (confirmPasswordCtrl.errors == null || 'passwordMismatch' in confirmPasswordCtrl.errors){\r\n      if (fb.get('Password').value != confirmPasswordCtrl.value)\r\n        confirmPasswordCtrl.setErrors({passwordMismatch:true});\r\n      else\r\n        \r\n      confirmPasswordCtrl.setErrors(null);\r\n    }\r\n  }\r\n\r\n  register(){\r\n    var body = {\r\n      UserName: this.formModel.value.UserName,\r\n      Email: this.formModel.value.Email,\r\n      Password: this.formModel.value.Passwords.Password,\r\n    }\r\n\r\n    return this.http.post(this.rootURL+'Users/Register', body);\r\n  }\r\n\r\n  login(formData){\r\n      return this.http.post(this.rootURL +'Users/Login', formData);\r\n  }\r\n\r\n    getUserProfile() {\r\n        return this.http.get(this.rootURL + 'Users/UserProfile')\r\n            .toPromise()\r\n            .then((u: UserProfile) => {\r\n                this.userProfile = u;\r\n            });\r\n  }\r\n\r\n    loadRoles(): Observable<boolean> {\r\n        return this.http.get(this.rootURL + \"Users/Roles\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.roles = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    loadUserRoles(): Observable<boolean> {\r\n        return this.http.get(this.rootURL + \"Users/UserRoles\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.userRoles = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    onLogout() {\r\n        localStorage.removeItem('token');\r\n        this.router.navigate(['user/login']);\r\n    }\r\n\r\n  roleMatch(allowedRoles): boolean{\r\n    var isMatch = false;\r\n    var payload = JSON.parse(window.atob(localStorage.getItem('token').split('.')[1]));\r\n    var userRole = payload.role;\r\n    allowedRoles.forEach(element => {\r\n      if (userRole == element){\r\n        isMatch = true;\r\n        return false;\r\n      }\r\n    });\r\n    return isMatch;\r\n    }\r\n\r\n    public roles: Role[] = []; \r\n    public userRoles: UserRole[] = [];\r\n    public userProfile: UserProfile = new UserProfile();\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../../shared/dataService\";\r\nimport { Process, Resource, Product, Type, User, Task } from '../../models/models';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: \"process-card\",\r\n    templateUrl: \"processCard.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class ProcessCard {\r\n    constructor(public service: DataService, private dialogRef: MatDialogRef<ProcessCard>) {\r\n\r\n    }\r\n\r\n    public onClear() {\r\n        this.service.processCard.reset();\r\n        this.service.initializeProcessCard();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public onSubmit() {\r\n        if (this.service.processCard.valid) {\r\n            this.service.addProcessFromProcessCard();\r\n        }\r\n\r\n        this.onClear();\r\n    }\r\n}","<mat-toolbar>\r\n    <span>New Process</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button (click)=\"onClear()\"><i class=\"fa fa-times\"></i></button>\r\n</mat-toolbar>\r\n<form [formGroup]=\"service.processCard\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n    <mat-grid-list cols=\"1\" rowHeight=\"600px\">\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <input type=\"hidden\" formControlName=\"id\" />\r\n                <mat-form-field>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Name\" />\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Choose a start date</mat-label>\r\n                    <input formControlName=\"timeStart\" matInput [matDatepicker]=\"startDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #startDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Choose an end date</mat-label>\r\n                    <input formControlName=\"timeEnd\" matInput [matDatepicker]=\"endDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #endDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"button-row col-md-7 offset-6\">\r\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"service.processCard.invalid\" (click)=\"onSubmit()\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</form>","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../../shared/dataService\";\r\nimport { Process, Resource, Product, Type, User, Task } from '../../models/models';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: \"product-card\",\r\n    templateUrl: \"productCard.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class ProductCard {\r\n    constructor(public service: DataService, private dialogRef: MatDialogRef<ProductCard>) {\r\n\r\n    }\r\n\r\n    public onClear() {\r\n        this.service.productCard.reset();\r\n        this.service.initializeProductCard();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public onSubmit() {\r\n        if (this.service.productCard.valid) {\r\n            this.service.addProductFromProductCard();\r\n        }\r\n\r\n        this.onClear();\r\n    }\r\n}","<mat-toolbar>\r\n    <span>New Product</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button (click)=\"onClear()\"><i class=\"fa fa-times\"></i></button>\r\n</mat-toolbar>\r\n<form [formGroup]=\"service.productCard\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n    <mat-grid-list cols=\"1\" rowHeight=\"600px\">\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <input type=\"hidden\" formControlName=\"id\" />\r\n                <mat-form-field>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Name\" />\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"button-row col-md-7 offset-6\">\r\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"service.productCard.invalid\" (click)=\"onSubmit()\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</form>","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Process, Resource, Product, Type, User, Task, Status } from '../models/models';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { ProcessCard } from './processCard/process';\r\nimport { TypeCard } from './typeCard/type';\r\nimport { ProductCard } from './productCard/product';\r\nimport { UserService } from '../shared/user.service';\r\n\r\n@Component({\r\n    selector: \"task\",\r\n    templateUrl: \"task.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class TaskCard {\r\n    constructor(public dataService: DataService, private dialogRef: MatDialogRef<TaskCard>, private dialog: MatDialog, public userService: UserService) {\r\n        this.dataService.loadStatuses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.statuses = this.dataService.statuses;\r\n                }\r\n            });\r\n        this.dataService.loadTasks()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.tasks = this.dataService.tasks;\r\n                }\r\n            });\r\n        this.dataService.loadProccesses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.processes = this.dataService.processes;\r\n                }\r\n            });\r\n        this.dataService.loadResources()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.resources = this.dataService.resources;\r\n                    this.products = this.dataService.products;\r\n                }\r\n            });\r\n        this.dataService.loadTypes()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.types = this.dataService.types;\r\n                }\r\n            });\r\n        this.dataService.loadUsers()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.users = this.dataService.users;\r\n                }\r\n            });\r\n        this.userService.getUserProfile();\r\n    }\r\n\r\n    public processes: Process[] = [];\r\n    public resources: Resource[] = [];\r\n    public products: Product[] = [];\r\n    public types: Type[] = [];\r\n    public users: User[] = [];\r\n    public tasks: Task[] = [];\r\n    public statuses: Status[] = []; \r\n\r\n    public onClear() {\r\n        this.dataService.taskCard.reset();\r\n        this.dataService.initializeTaskCard();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public onSubmit() {\r\n        if (this.dataService.taskCard.valid) {\r\n            if (this.dataService.add) {\r\n                if (!this.dataService.taskCard.value[\"user\"]) {\r\n                    this.dataService.addTaskFromTaskCard(this.userService.userProfile.id);\r\n                }\r\n                this.dataService.addTaskFromTaskCard();\r\n            }\r\n            else {\r\n                this.dataService.updateTaskFromTaskCard();\r\n            }\r\n        }\r\n\r\n        this.onClear();\r\n    }\r\n\r\n    public onDelete() {\r\n        this.dataService.deleteTask(this.dataService.taskCard.value[\"id\"])\r\n    }\r\n\r\n\r\n\r\n    public createProcess(): void {\r\n        this.dataService.initializeTaskCard();\r\n        const dialogRef = this.dialog.open(ProcessCard, {\r\n            disableClose: true,\r\n            autoFocus: true,\r\n            width: \"60%\"\r\n        });\r\n    }\r\n\r\n    public sortUsersById() {\r\n        this.dataService.getSortUsersByTypeId(this.dataService.taskCard.value[\"type\"]);\r\n        this.users = this.dataService.users;\r\n    }\r\n\r\n    public createType(): void {\r\n        this.dataService.initializeTypeCard();\r\n        const dialogRef = this.dialog.open(TypeCard, {\r\n            disableClose: true,\r\n            autoFocus: true,\r\n            width: \"60%\"\r\n        });\r\n    }\r\n\r\n    public createProduct(): void {\r\n        this.dataService.initializeProductCard();\r\n        const dialogRef = this.dialog.open(ProductCard, {\r\n            disableClose: true,\r\n            autoFocus: true,\r\n            width: \"60%\"\r\n        });\r\n    }\r\n}","<mat-toolbar>\r\n    <span *ngIf=\"this.dataService.add\">New Task</span>\r\n    <span *ngIf=\"!this.dataService.add\">Update Task</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <span class=\"status\" *ngIf=\"!this.dataService.add && this.dataService.taskCard.value['status']\">{{this.dataService.taskCard.value['status']}}</span>\r\n    <button (click)=\"onClear()\"><i class=\"fa fa-times\"></i></button>\r\n</mat-toolbar>\r\n<form [formGroup]=\"dataService.taskCard\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n    <mat-grid-list cols=\"2\" rowHeight=\"600px\">\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <input type=\"hidden\" formControlName=\"id\" />\r\n                <mat-form-field>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Name\" />\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-11\">\r\n                        <mat-form-field *ngIf=\"this.dataService.add\" class=\"addItem\">\r\n                            <mat-select  formControlName=\"process\" placeholder=\"Process\" class=\"process\">\r\n                                <mat-option>None</mat-option>\r\n                                <ng-container *ngFor=\"let process of this.processes\">\r\n                                    <mat-option value=\"{{process.id}}\">{{process.name}}</mat-option>\r\n                                </ng-container>\r\n                            </mat-select>\r\n                            <mat-error>This field is mandatory.</mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field *ngIf=\"!this.dataService.add\">\r\n                            <mat-label>Process</mat-label>\r\n                            <input matInput *ngIf=\"!this.dataService.add\" [disabled]=\"true\">{{this.dataService.taskCard.value[\"process\"]}}\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-1\" *ngIf=\"this.dataService.add\">\r\n                        <button class=\"btn btn-primary\" (click)=\"createProcess()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <mat-form-field *ngIf=\"this.dataService.add\">\r\n                    <mat-select formControlName=\"parent\" placeholder=\"Parent task\">\r\n                        <mat-option>None</mat-option>\r\n                        <ng-container *ngFor=\"let task of this.tasks\">\r\n                            <mat-option value=\"{{task.id}}\">{{task.name}}</mat-option>\r\n                        </ng-container>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field *ngIf=\"!this.dataService.add\">\r\n                    <mat-label>Parent task</mat-label>\r\n                    <input matInput *ngIf=\"!this.dataService.add\" [disabled]=\"true\">{{this.dataService.taskCard.value[\"parent\"]}}\r\n                </mat-form-field>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-11\">\r\n                        <mat-form-field class=\"addItem\" *ngIf=\"this.dataService.add\">\r\n                            <mat-select formControlName=\"type\" placeholder=\"Task type\" (selectionChange)=\"sortUsersById()\">\r\n                                <mat-option>None</mat-option>\r\n                                <ng-container *ngFor=\"let type of this.types\">\r\n                                    <mat-option value=\"{{type.id}}\">{{type.name}}</mat-option>\r\n                                </ng-container>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-form-field *ngIf=\"!this.dataService.add\">\r\n                            <mat-label>Task type</mat-label>\r\n                            <input matInput *ngIf=\"!this.dataService.add\" [disabled]=\"true\">{{this.dataService.taskCard.value[\"type\"]}}\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-1\" *ngIf=\"this.dataService.add\">\r\n                        <button class=\"btn btn-primary\" (click)=\"createType()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <mat-form-field *ngIf=\"(this.dataService.add && this.userService.roleMatch(['Head'])) || this.dataService.taskCard.value['isChangeUsers']\">\r\n                    <mat-select formControlName=\"user\" placeholder=\"User\">\r\n                        <mat-option>None</mat-option>\r\n                        <ng-container *ngFor=\"let user of this.users\">\r\n                            <mat-option *ngIf=\"user.numberOfTasksByType == null || user.numberOfTasksByType==0\" value=\"{{user.id}}\">{{user.userName}}</mat-option>\r\n                            <mat-option *ngIf=\"user.numberOfTasksByType>0\" value=\"{{user.id}}\">{{user.userName}} ({{user.numberOfTasksByType}})</mat-option>\r\n                        </ng-container>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field *ngIf=\"!this.dataService.add && !this.dataService.taskCard.value['isChangeUsers']\">\r\n                    <mat-label>User name</mat-label>\r\n                    <input matInput [disabled]=\"true\">{{this.dataService.taskCard.value[\"user\"]}}\r\n                </mat-form-field>\r\n                <div>\r\n                    <mat-slide-toggle [disabled]=\"!this.dataService.add\" color=\"primary\" formControlName=\"isChangeTime\">Let to change critical date?</mat-slide-toggle>\r\n                </div>\r\n                <div>\r\n                    <mat-slide-toggle [disabled]=\"!this.dataService.add\" color=\"primary\" formControlName=\"isChangeUsers\">Let to change users?</mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n</mat-grid-tile>\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <mat-form-field>\r\n                    <mat-label>Choose a start date</mat-label>\r\n                    <input formControlName=\"timeStart\" matInput [matDatepicker]=\"startDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #startDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Choose an end date</mat-label>\r\n                    <input formControlName=\"timeEnd\" matInput [matDatepicker]=\"endDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #endDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Choose a critical date</mat-label>\r\n                    <input [disabled]=\"!this.dataService.add && !this.dataService.taskCard.value['isChangeTime']\" formControlName=\"timeReserv\" matInput [matDatepicker]=\"criticalDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"criticalDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #criticalDatePicker></mat-datepicker>\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-11\">\r\n                        <mat-form-field class=\"addItem\" *ngIf=\"this.dataService.add\">\r\n                            <mat-select formControlName=\"product\" placeholder=\"Product\" >\r\n                                <mat-option>None</mat-option>\r\n                                <ng-container *ngFor=\"let product of this.products\">\r\n                                    <mat-option value=\"{{product.id}}\">{{product.name}}</mat-option>\r\n                                </ng-container>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-form-field *ngIf=\"!this.dataService.add\">\r\n                            <mat-label>Product</mat-label>\r\n                            <input matInput *ngIf=\"!this.dataService.add\" [disabled]=\"true\">{{this.dataService.taskCard.value[\"product\"]}}\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-1\" *ngIf=\"this.dataService.add\">\r\n                        <button class=\"btn btn-primary\" (click)=\"createProduct()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-11\">\r\n                        <mat-form-field class=\"addItem\" *ngIf=\"this.dataService.add\">\r\n                            <mat-select formControlName=\"resource\" placeholder=\"Resource\" >\r\n                                <mat-option>None</mat-option>\r\n                                <ng-container *ngFor=\"let resource of this.resources\">\r\n                                    <mat-option value=\"{{resource.id}}\">{{resource.name}}</mat-option>\r\n                                </ng-container>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-form-field *ngIf=\"!this.dataService.add\">\r\n                            <mat-label>Resource</mat-label>\r\n                            <input matInput *ngIf=\"!this.dataService.add\" [disabled]=\"true\">{{this.dataService.taskCard.value[\"resource\"]}}\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-md-1\" *ngIf=\"this.dataService.add\">\r\n                        <button class=\"btn btn-primary\" (click)=\"createProduct()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <mat-form-field *ngIf=\"this.dataService.add\">\r\n                    <mat-select formControlName=\"priority\" placeholder=\"Priority\">\r\n                        <mat-option value=\"1\">1</mat-option>\r\n                        <mat-option value=\"2\">2</mat-option>\r\n                        <mat-option value=\"3\">3</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field *ngIf=\"!this.dataService.add\">\r\n                    <mat-label>Priority</mat-label>\r\n                    <input matInput [disabled]=\"true\">{{this.dataService.taskCard.value[\"priority\"]}}\r\n                </mat-form-field>\r\n                <mat-form-field *ngIf=\"!this.dataService.add\">\r\n                    <mat-select formControlName=\"status\" placeholder=\"Status\">\r\n                        <ng-container *ngFor=\"let status of this.statuses\">\r\n                            <mat-option value=\"{{status.id}}\">{{status.name}}</mat-option>\r\n                        </ng-container>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <div class=\"button-row col-md-7 offset-6\">\r\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"dataService.taskCard.invalid\" (click)=\"onSubmit()\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</form>","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../../shared/dataService\";\r\nimport { Process, Resource, Product, Type, User, Task } from '../../models/models';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: \"type-card\",\r\n    templateUrl: \"typeCard.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class TypeCard {\r\n    constructor(public service: DataService, private dialogRef: MatDialogRef<TypeCard>) {\r\n\r\n    }\r\n\r\n    public onClear() {\r\n        this.service.typeCard.reset();\r\n        this.service.initializeTypeCard();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public onSubmit() {\r\n        if (this.service.typeCard.valid) {\r\n            this.service.addTypeFromTypeCard();\r\n        }\r\n\r\n        this.onClear();\r\n    }\r\n}","<mat-toolbar>\r\n    <span>New Type</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <button (click)=\"onClear()\"><i class=\"fa fa-times\"></i></button>\r\n</mat-toolbar>\r\n<form [formGroup]=\"service.typeCard\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n    <mat-grid-list cols=\"1\" rowHeight=\"600px\">\r\n        <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n                <input type=\"hidden\" formControlName=\"id\" />\r\n                <mat-form-field>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Name\" />\r\n                    <mat-error>This field is mandatory.</mat-error>\r\n                </mat-form-field>\r\n                <div class=\"button-row col-md-7 offset-6\">\r\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"service.typeCard.invalid\" (click)=\"onSubmit()\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserService } from '../../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styles: []\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  formModel={\r\n    UserName: '',\r\n    Password:''\r\n  }\r\n\r\n  constructor(private service: UserService, private router: Router, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('token') != null){\r\n      this.router.navigate(['/info']);\r\n    }\r\n  }\r\n\r\n  onSubmit(form:NgForm){\r\n    this.service.login(form.value).subscribe(\r\n      (res: any) =>{\r\n        localStorage.setItem('token',res.token);\r\n            this.router.navigateByUrl('/info');\r\n            this.service.getUserProfile();\r\n      },\r\n      err => {\r\n        if(err.status == 400){\r\n          this.toastr.error('Incorrect username or password.', 'Authentification failed.');\r\n        }\r\n        else{\r\n          console.log(err);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<img src=\"/assets/img/single_user.png\" class=\"mx-auto d-block\">\n<form #form='ngForm' class=\"mb-4\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input class=\"form-control\" #UserName=\"ngModel\" name=\"UserName\" [(ngModel)]=\"formModel.UserName\" required>\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" class=\"form-control\" #UserName=\"ngModel\" name=\"Password\" [(ngModel)]=\"formModel.Password\" required>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-8 offset-md-2\">\n            <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"form.invalid\">Login</button>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styles: []\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  constructor(public service: UserService, private toastr: ToastrService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('token') != null){\r\n        this.router.navigate(['/info']);\r\n    }\r\n    this.service.formModel.reset();\r\n  }\r\n\r\n  onSubmit(){\r\n    this.service.register().subscribe(\r\n      (res:any) => {\r\n        if (res.token!=null){\r\n            this.service.formModel.reset();\r\n            this.toastr.success(\"Login was created!\", \"Registration successful.\");\r\n            localStorage.setItem('token', res.token);\r\n            this.router.navigateByUrl('/info');\r\n        }\r\n        else{\r\n          res.errors.forEach(error => {\r\n            switch(error.Code){\r\n              case 'DuplicateUserName':\r\n                  this.toastr.error(\"Username is already taken\", \"Registration Failed.\");\r\n                  break;\r\n              default:\r\n                  this.toastr.error(error.Description, \"Registration Failed.\");\r\n            }\r\n          });\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"service.formModel\" autocomplete=\"off\" (submit) =\"onSubmit()\">\n    <div class=\"form-group required\">\n        <label>Username</label>\n        <input class=\"form-control\" formControlName=\"UserName\">\n        <label class=\"text-danger\" *ngIf=\"service.formModel.get('UserName').touched && service.formModel.get('UserName').errors?.required\">This field is required</label>\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input class=\"form-control\" formControlName=\"Email\">\n        <label class=\"text-danger\" *ngIf=\"service.formModel.get('Email').touched && service.formModel.get('Email').errors?.passwordMismatch\">Confirm password doesn't match</label>\n    </div>\n    <div formGroupName=\"Passwords\">\n        <div class=\"form-group required\">\n        <label>Password</label>\n        <input class=\"form-control\" type=\"password\" formControlName=\"Password\">\n        <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.required\">This field is required</label>\n        <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.minlength\">Minimum 4 symbols</label>\n        </div>\n        <div class=\"form-group required\">\n        <label>Confirm Password</label>\n        <input class=\"form-control\" type=\"password\" formControlName=\"ConfirmPassword\">\n        <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.required\">This field is required</label>\n        <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\">Password does not match</label>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-8 offset-md-2\">\n            <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"!service.formModel.valid\">Sign Up</button>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styles: []\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"wrapped-div\">\n        <div class=\"tab-header\">\n            <h2 routerLink='/user/login' routerLinkActive='active'>Sign In</h2>\n            <h2 routerLink='/user/registration' routerLinkActive='active'>Sign Up</h2>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-10 offset-md-1\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/dataService';\r\nimport { User, UserRole, Role } from '../models/models';\r\nimport { UserService } from '../shared/user.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\n@Component({\n    selector: 'user-list',\n    templateUrl: './userList.component.html',\n    styles: []\n})\nexport class UserListComponent implements OnInit {\n\n    constructor(public dataService: DataService, public userService: UserService, private dialogRef: MatDialogRef<UserListComponent>) { }\n\n    ngOnInit() {\n        this.loadData();\n    }\n\n    public onSubmit() {\n        this.dataService.updateUserFromCard();\r\n        this.loadData();\r\n        this.loadData();\r\n    }\n\n    public onCancel() {\r\n        this.dataService.userCard.reset();\r\n        this.dialogRef.close();\r\n    }\n\n    public onDelete(id: string) {\n        this.dataService.deleteUser(id);\r\n        this.loadData();\r\n        this.loadData();\r\n    }\n\n    public populateForm(user: User) {\r\n        this.dataService.populateUserCard(user);\r\n    }\n\n    public loadData() {\n        this.dataService.loadUsers().subscribe(() => {\n            this.users = this.dataService.users;\n        });\n\n        this.userService.loadRoles().subscribe(() => {\n            this.roles = this.userService.roles;\n        });\n\n        this.userService.loadUserRoles().subscribe(() => {\n            this.userRoles = this.userService.userRoles;\n            this.userRoles.forEach((ur) => {\n                this.users.forEach((u) => {\r\n                    this.roles.forEach((r) => {\r\n                        if (ur.roleId == r.id && ur.userId == u.id) {\r\n                            u.role = r.name;\r\n                        }\r\n                    })\r\n                    if (!u.role) {\r\n                        u.role = this.roles[0].name;\r\n                    }\r\n                })\r\n            })\n        });\n\n        this.userService.loadUserRoles().subscribe(() => {\n            this.userRoles = this.userService.userRoles;\n            this.userRoles.forEach((ur) => {\n                this.users.forEach((u) => {\r\n                    this.roles.forEach((r) => {\r\n                        if (ur.roleId == r.id && ur.userId == u.id) {\r\n                            u.role = r.name;\r\n                        }\r\n                    })\r\n                })\r\n            })\n        });\r\n    }\n\n    public users: User[] = []\n    public userRoles: UserRole[] = []\n    public roles: Role[] = []\n}\n","<div class=\"jumbtron users\">\r\n    <h1 class=\"display-4 text-center\">Users</h1>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <form [formGroup]=\"dataService.userCard\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n                <mat-grid-list cols=\"1\">\r\n                    <mat-grid-tile>\r\n                        <div class=\"controles-container\">\r\n                            <input type=\"hidden\" formControlName=\"id\" />\r\n                            <mat-form-field>\r\n                                <input formControlName=\"name\" matInput placeholder=\"Name\" />\r\n                                <mat-error>This field is mandatory.</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                                <input formControlName=\"email\" matInput placeholder=\"Email\" />\r\n                                <mat-error>This field is mandatory.</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                                <mat-select formControlName=\"role\" placeholder=\"Role\">\r\n                                    <ng-container *ngFor=\"let role of this.roles\">\r\n                                        <mat-option value=\"{{role.name}}\">{{role.name}}</mat-option>\r\n                                    </ng-container>\r\n                                </mat-select>\r\n                                <mat-error>This field is mandatory.</mat-error>\r\n                            </mat-form-field>\r\n                            <div class=\"button-row col-md-12\">\r\n                                <button mat-raised-button class=\"btn btn-success\" type=\"submit\" [disabled]=\"dataService.userCard.invalid\" (click)=\"onSubmit()\">Submit</button>\r\n                                <button mat-raised-button color=\"primary\" (click)=\"onCancel()\">Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </mat-grid-tile>\r\n                </mat-grid-list>\r\n            </form>\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n            <div id=\"table-wrapper\">\r\n                <div id=\"table-scroll\">\r\n                    <table class=\"table table-hover\">\r\n                        <thead>\r\n                            <td><b>Name</b></td>\r\n                            <td><b>Email</b></td>\r\n                            <td><b>Work</b></td>\r\n                            <td></td>\r\n                        </thead>\r\n                        <tr *ngFor=\"let user of users\" (click)=\"populateForm(user)\">\r\n                            <td>{{user.userName}}</td>\r\n                            <td>{{user.email}}</td>\r\n                            <td>{{user.role!= null ? user.role: \"\"}}</td>\r\n                            <td (click)=\"onDelete(user.id)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}